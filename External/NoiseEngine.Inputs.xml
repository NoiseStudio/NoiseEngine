<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NoiseEngine.Inputs</name>
    </assembly>
    <members>
        <member name="M:NoiseEngine.Inputs.Input.GetInput(NoiseEngine.Rendering.Presentation.Window)">
            <summary>
            Returns an existing or creating a new <see cref="T:NoiseEngine.Inputs.Input"/> object.
            </summary>
            <param name="window">The <see cref="T:NoiseEngine.Rendering.Presentation.Window"/> from which the input is taken.</param>
            <returns><see cref="T:NoiseEngine.Inputs.Input"/> of this <paramref name="window"/>.</returns>
        </member>
        <member name="M:NoiseEngine.Inputs.Input.GetKeyState(NoiseEngine.Inputs.Key)">
            <summary>
            Returns <see cref="T:NoiseEngine.Inputs.KeyState"/> from given <paramref name="key"/>.
            </summary>
            <param name="key"><see cref="T:NoiseEngine.Inputs.Key"/> to get the state of.</param>
            <returns>Current <see cref="T:NoiseEngine.Inputs.KeyState"/> of <paramref name="key"/>.</returns>
        </member>
        <member name="M:NoiseEngine.Inputs.Input.GetKeyState(NoiseEngine.Inputs.Key,NoiseEngine.Inputs.KeyModifier@)">
            <summary>
            Returns <see cref="T:NoiseEngine.Inputs.KeyState"/> and <paramref name="keyModifier"/> from given <paramref name="key"/>.
            </summary>
            <param name="key"><see cref="T:NoiseEngine.Inputs.Key"/> to get the state of.</param>
            <param name="keyModifier">Current <see cref="T:NoiseEngine.Inputs.KeyModifier"/> of <paramref name="key"/>.</param>
            <returns>Current <see cref="T:NoiseEngine.Inputs.KeyState"/> of <paramref name="key"/>.</returns>
        </member>
        <member name="M:NoiseEngine.Inputs.Input.GetKey(NoiseEngine.Inputs.Key)">
            <summary>
            Returns whether the <paramref name="key"/> is pressed.
            </summary>
            <param name="key"><see cref="T:NoiseEngine.Inputs.Key"/> to get the state of.</param>
            <returns>Returns <see langword="true"/> if key state is <see cref="F:NoiseEngine.Inputs.KeyState.JustPressed"/>,
            <see cref="F:NoiseEngine.Inputs.KeyState.Pressed"/> or <see cref="F:NoiseEngine.Inputs.KeyState.Repeated"/>,
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:NoiseEngine.Inputs.Input.GetKey(NoiseEngine.Inputs.Key,NoiseEngine.Inputs.KeyModifier@)">
            <summary>
            Returns whether the <paramref name="key"/> is pressed.
            </summary>
            <param name="key"><see cref="T:NoiseEngine.Inputs.Key"/> to get the state of.</param>
            <param name="keyModifier">Current <see cref="T:NoiseEngine.Inputs.KeyModifier"/> of <paramref name="key"/>.</param>
            <returns>Returns <see langword="true"/> if key state is <see cref="F:NoiseEngine.Inputs.KeyState.JustPressed"/>,
            <see cref="F:NoiseEngine.Inputs.KeyState.Pressed"/> or <see cref="F:NoiseEngine.Inputs.KeyState.Repeated"/>,
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:NoiseEngine.Inputs.Input.GetKeyDown(NoiseEngine.Inputs.Key)">
            <summary>
            Returns whether the <paramref name="key"/> is just pressed (in this poll events frame).
            </summary>
            <param name="key"><see cref="T:NoiseEngine.Inputs.Key"/> to get the state of.</param>
            <returns>Returns <see langword="true"/> if key state is <see cref="F:NoiseEngine.Inputs.KeyState.JustPressed"/>,
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:NoiseEngine.Inputs.Input.GetKeyDown(NoiseEngine.Inputs.Key,NoiseEngine.Inputs.KeyModifier@)">
            <summary>
            Returns whether the <paramref name="key"/> is just pressed (in this poll events frame).
            </summary>
            <param name="key"><see cref="T:NoiseEngine.Inputs.Key"/> to get the state of.</param>
            <param name="keyModifier">Current <see cref="T:NoiseEngine.Inputs.KeyModifier"/> of <paramref name="key"/>.</param>
            <returns>Returns <see langword="true"/> if key state is <see cref="F:NoiseEngine.Inputs.KeyState.JustPressed"/>,
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:NoiseEngine.Inputs.Input.GetKeyUp(NoiseEngine.Inputs.Key)">
            <summary>
            Returns whether the <paramref name="key"/> is just released (in this poll events frame).
            </summary>
            <param name="key"><see cref="T:NoiseEngine.Inputs.Key"/> to get the state of.</param>
            <returns>Returns <see langword="true"/> if key state is <see cref="F:NoiseEngine.Inputs.KeyState.JustReleased"/>,
            otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:NoiseEngine.Inputs.Input.GetKeyUp(NoiseEngine.Inputs.Key,NoiseEngine.Inputs.KeyModifier@)">
            <summary>
            Returns whether the <paramref name="key"/> is just released (in this poll events frame).
            </summary>
            <param name="key"><see cref="T:NoiseEngine.Inputs.Key"/> to get the state of.</param>
            <param name="keyModifier">Current <see cref="T:NoiseEngine.Inputs.KeyModifier"/> of <paramref name="key"/>.</param>
            <returns>Returns <see langword="true"/> if key state is <see cref="F:NoiseEngine.Inputs.KeyState.JustReleased"/>,
            otherwise <see langword="false"/>.</returns>
        </member>
    </members>
</doc>
